#!/usr/bin/env python
#
# TODO:
# Reply status code
# Cache - Done
# Persistent State - Done
#


from twisted.internet import protocol, reactor
import sys
from qmail_outip import IpManagerFactory,IpAllocator
import yaml
from redis import Redis
import logging

logging.basicConfig(format="%(asctime)s %(funcName)s:%(lineno)s:%(levelname)s: %(message)s", level = logging.DEBUG)

logger = logging.getLogger("outip")

logger.DEBUG = logging.DEBUG
logger.WARNING = logging.WARNING
logger.ERROR = logging.ERROR
logger.INFO = logging.INFO
logger.CRITICAL = logging.CRITICAL


try:
  config = yaml.load(file(sys.argv[1]))
except IndexError:
  print "%s <config file>"%(sys.argv[0])
  sys.exit(1)

allocator = IpAllocator(config)
port = int(config.get("port") or 9000)

reactor.listenTCP(port, IpManagerFactory(allocator))
logger.info("Listening on port %d"%(port))
reactor.run()



